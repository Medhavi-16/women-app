{"version":3,"sources":["index.ios.tsx"],"names":["React","ActionSheetIOS","View","ActionSheet","props","pointerEvents","flex","Children","only","children","dataOptions","onSelect","cancelButtonIndex","destructiveButtonIndex","options","tintColor","iosOptions","title","undefined","message","anchor","showActionSheetWithOptions","Component"],"mappings":"sbAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,OAASC,cAAT,CAAyBC,IAAzB,KAAgD,cAAhD,C,GAWqBC,CAAAA,W,wRACV,CACP,MACE,qBAAC,IAAD,EAAM,aAAa,CAAE,KAAKC,KAAL,CAAWC,aAAhC,CAA+C,KAAK,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAtD,iDACGN,KAAK,CAACO,QAAN,CAAeC,IAAf,CAAoB,KAAKJ,KAAL,CAAWK,QAA/B,CADH,CADF,CAKD,C,8EAE0BC,W,CAAoCC,Q,CAAoB,IAEzEC,CAAAA,iBAFyE,CAEPF,WAFO,CAEzEE,iBAFyE,CAEtDC,sBAFsD,CAEPH,WAFO,CAEtDG,sBAFsD,CAE9BC,OAF8B,CAEPJ,WAFO,CAE9BI,OAF8B,CAErBC,SAFqB,CAEPL,WAFO,CAErBK,SAFqB,CAGjF,GAAMC,CAAAA,UAAiC,CAAG,CACxCJ,iBAAiB,CAAjBA,iBADwC,CAExCC,sBAAsB,CAAtBA,sBAFwC,CAGxCC,OAAO,CAAPA,OAHwC,CAIxCC,SAAS,CAATA,SAJwC,CAMxCE,KAAK,CAAEP,WAAW,CAACO,KAAZ,EAAqBC,SANY,CAOxCC,OAAO,CAAET,WAAW,CAACS,OAAZ,EAAuBD,SAPQ,CAQxCE,MAAM,CAAEV,WAAW,CAACU,MAAZ,EAAsBF,SARU,CAA1C,CAUAjB,cAAc,CAACoB,0BAAf,CAA0CL,UAA1C,CAAsDL,QAAtD,EACD,C,yBAvBsCX,KAAK,CAACsB,S,SAA1BnB,W","sourcesContent":["import * as React from 'react';\n\nimport { ActionSheetIOS, View, ViewProps } from 'react-native';\n\nimport { ActionSheetIOSOptions } from '../types';\n\ninterface Props {\n  readonly children: React.ReactNode;\n  readonly pointerEvents?: ViewProps['pointerEvents'];\n}\n\ntype onSelect = (buttonIndex: number) => void;\n\nexport default class ActionSheet extends React.Component<Props> {\n  render() {\n    return (\n      <View pointerEvents={this.props.pointerEvents} style={{ flex: 1 }}>\n        {React.Children.only(this.props.children)}\n      </View>\n    );\n  }\n\n  showActionSheetWithOptions(dataOptions: ActionSheetIOSOptions, onSelect: onSelect) {\n    // ...dataOptions include other keys which use in android and web, thats why `Android-Only options` Crash on IOS\n    const { cancelButtonIndex, destructiveButtonIndex, options, tintColor } = dataOptions;\n    const iosOptions: ActionSheetIOSOptions = {\n      cancelButtonIndex,\n      destructiveButtonIndex,\n      options,\n      tintColor,\n      // A null title or message on iOS causes a crash\n      title: dataOptions.title || undefined,\n      message: dataOptions.message || undefined,\n      anchor: dataOptions.anchor || undefined,\n    };\n    ActionSheetIOS.showActionSheetWithOptions(iosOptions, onSelect);\n  }\n}\n"]}