{"version":3,"sources":["Appbar.tsx"],"names":["DEFAULT_APPBAR_HEIGHT","Appbar","children","dark","style","theme","rest","colors","isDarkTheme","mode","StyleSheet","flatten","backgroundColor","customBackground","elevation","restStyle","isDark","surface","primary","isLight","shouldCenterContent","shouldAddLeftSpacing","shouldAddRightSpacing","Platform","OS","hasAppbarContent","leftItemsCount","rightItemsCount","React","Children","forEach","child","isValidElement","type","AppbarContent","styles","appbar","spacing","toArray","filter","map","i","AppbarAction","AppbarBackAction","includes","props","color","white","black","marginLeft","alignItems","cloneElement","Content","Action","BackAction","Header","AppbarHeader","create","height","flexDirection","paddingHorizontal","width","AppbarWithTheme"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, ViewStyle, Platform, StyleSheet, StyleProp } from 'react-native';\nimport color from 'color';\n\nimport {\n  AppbarContent,\n  AppbarAction,\n  AppbarBackAction,\n  AppbarHeader,\n} from './AppbarElements';\nimport Surface from '../Surface';\nimport { withTheme } from '../../core/theming';\nimport { black, white } from '../../styles/colors';\nimport overlay from '../../styles/overlay';\n\ntype Props = Partial<React.ComponentPropsWithRef<typeof View>> & {\n  /**\n   * Whether the background color is a dark color. A dark appbar will render light text and vice-versa.\n   */\n  dark?: boolean;\n  /**\n   * Content of the `Appbar`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: ReactNativePaper.Theme;\n  style?: StyleProp<ViewStyle>;\n};\n\nexport const DEFAULT_APPBAR_HEIGHT = 56;\n\n/**\n * A component to display action items in a bar. It can be placed at the top or bottom.\n * The top bar usually contains the screen title, controls such as navigation buttons, menu button etc.\n * The bottom bar usually provides access to a drawer and up to four actions.\n *\n * By default Appbar uses primary color as a background, in dark theme with `adaptive` mode it will use surface colour instead.\n * See [Dark Theme](https://callstack.github.io/react-native-paper/theming.html#dark-theme) for more informations\n *\n * <div class=\"screenshots\">\n *   <img class=\"medium\" src=\"screenshots/appbar.png\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Appbar } from 'react-native-paper';\n * import { StyleSheet } from 'react-native';\n *\n * const MyComponent = () => (\n *  <Appbar style={styles.bottom}>\n *    <Appbar.Action\n *      icon=\"archive\"\n *      onPress={() => console.log('Pressed archive')}\n *     />\n *     <Appbar.Action icon=\"mail\" onPress={() => console.log('Pressed mail')} />\n *     <Appbar.Action icon=\"label\" onPress={() => console.log('Pressed label')} />\n *     <Appbar.Action\n *       icon=\"delete\"\n *       onPress={() => console.log('Pressed delete')}\n *     />\n *   </Appbar>\n *  );\n *\n * export default MyComponent\n *\n * const styles = StyleSheet.create({\n *   bottom: {\n *     position: 'absolute',\n *     left: 0,\n *     right: 0,\n *     bottom: 0,\n *   },\n * });\n * ```\n */\nconst Appbar = ({ children, dark, style, theme, ...rest }: Props) => {\n  const { colors, dark: isDarkTheme, mode } = theme;\n  const {\n    backgroundColor: customBackground,\n    elevation = 4,\n    ...restStyle\n  }: ViewStyle = StyleSheet.flatten(style) || {};\n\n  let isDark: boolean;\n\n  const backgroundColor = customBackground\n    ? customBackground\n    : isDarkTheme && mode === 'adaptive'\n    ? overlay(elevation, colors.surface)\n    : colors.primary;\n  if (typeof dark === 'boolean') {\n    isDark = dark;\n  } else {\n    isDark =\n      backgroundColor === 'transparent'\n        ? false\n        : !color(backgroundColor).isLight();\n  }\n\n  let shouldCenterContent = false;\n  let shouldAddLeftSpacing = false;\n  let shouldAddRightSpacing = false;\n  if (Platform.OS === 'ios') {\n    let hasAppbarContent = false;\n    let leftItemsCount = 0;\n    let rightItemsCount = 0;\n\n    React.Children.forEach(children, (child) => {\n      if (React.isValidElement(child)) {\n        if (child.type === AppbarContent) {\n          hasAppbarContent = true;\n        } else if (hasAppbarContent) {\n          rightItemsCount++;\n        } else {\n          leftItemsCount++;\n        }\n      }\n    });\n\n    shouldCenterContent =\n      hasAppbarContent && leftItemsCount < 2 && rightItemsCount < 2;\n    shouldAddLeftSpacing = shouldCenterContent && leftItemsCount === 0;\n    shouldAddRightSpacing = shouldCenterContent && rightItemsCount === 0;\n  }\n  return (\n    <Surface\n      //@ts-ignore Types of property 'backgroundColor' are incompatible.\n      style={[{ backgroundColor }, styles.appbar, { elevation }, restStyle]}\n      {...rest}\n    >\n      {shouldAddLeftSpacing ? <View style={styles.spacing} /> : null}\n      {React.Children.toArray(children)\n        .filter((child) => child != null && typeof child !== 'boolean')\n        .map((child, i) => {\n          if (\n            !React.isValidElement(child) ||\n            ![\n              AppbarContent,\n              AppbarAction,\n              AppbarBackAction,\n              // @ts-ignore Type 'string' is not assignable to type\n            ].includes(child.type)\n          ) {\n            return child;\n          }\n\n          const props: { color?: string; style?: StyleProp<ViewStyle> } = {\n            color:\n              typeof child.props.color !== 'undefined'\n                ? child.props.color\n                : isDark\n                ? white\n                : black,\n          };\n\n          if (child.type === AppbarContent) {\n            props.style = [\n              // Since content is not first item, add extra left margin\n              i !== 0 && { marginLeft: 8 },\n              shouldCenterContent && { alignItems: 'center' },\n              child.props.style,\n            ];\n          }\n          return React.cloneElement(child, props);\n        })}\n      {shouldAddRightSpacing ? <View style={styles.spacing} /> : null}\n    </Surface>\n  );\n};\n\n// @component ./AppbarContent.tsx\nAppbar.Content = AppbarContent;\n// @component ./AppbarAction.tsx\nAppbar.Action = AppbarAction;\n// @component ./AppbarBackAction.tsx\nAppbar.BackAction = AppbarBackAction;\n// @component ./AppbarHeader.tsx\nAppbar.Header = AppbarHeader;\n\nconst styles = StyleSheet.create({\n  appbar: {\n    height: DEFAULT_APPBAR_HEIGHT,\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 4,\n    elevation: 4,\n  },\n  spacing: {\n    width: 48,\n  },\n});\n\nexport default withTheme(Appbar);\n\n// @component-docs ignore-next-line\nconst AppbarWithTheme = withTheme(Appbar);\n// @component-docs ignore-next-line\nexport { AppbarWithTheme as Appbar };\n"]}